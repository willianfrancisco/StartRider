// <auto-generated />
using System;
using DataMySql.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataMySql.Migrations
{
    [DbContext(typeof(StartRiderContext))]
    [Migration("20250509131905_MigracaoLocacao")]
    partial class MigracaoLocacao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Locacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDevolucao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRetirada")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LocatarioId")
                        .HasColumnType("int");

                    b.Property<int>("Plano")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocatarioId")
                        .IsUnique();

                    b.HasIndex("VeiculoId")
                        .IsUnique();

                    b.ToTable("Locacoes");
                });

            modelBuilder.Entity("Domain.Entities.Locatario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaCnh")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("DataEmissao")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataValidade")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FotoCnh")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroCnh")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Locatarios");
                });

            modelBuilder.Entity("Domain.Entities.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnoFabricacaoModelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cor")
                        .HasColumnType("longtext");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroRenavam")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoCombustivel")
                        .HasColumnType("int");

                    b.Property<int>("TipoVeiculo")
                        .HasColumnType("int");

                    b.Property<string>("UltimoLicenciamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("Domain.Entities.Locacao", b =>
                {
                    b.HasOne("Domain.Entities.Locatario", "Locatario")
                        .WithOne("Locacao")
                        .HasForeignKey("Domain.Entities.Locacao", "LocatarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Veiculo", "Veiculo")
                        .WithOne("Locacao")
                        .HasForeignKey("Domain.Entities.Locacao", "VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locatario");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Domain.Entities.Locatario", b =>
                {
                    b.Navigation("Locacao")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Veiculo", b =>
                {
                    b.Navigation("Locacao")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
